<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.PaymentRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.repository.PaymentRepository"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.entity.TransactionDetails"/>
    <fullyQualifiedTypeName name="lombok.extern.log4j.Log4j"/>
    <fullyQualifiedTypeName name="lombok.extern.log4j.Log4j2"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.PaymentMode"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.external.client.PaymentService"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.external.request.PaymentRequest"/>
    <fullyQualifiedTypeName name="javax.lang.model.util.Elements.Origin"/>
    <fullyQualifiedTypeName name="java.lang.Void"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.service.OrderService"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.OrderResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.OrderResponse.ProductDetails"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.PaymentResponse"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.external.response.PaymentResponse"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.OrderResponse.PaymentDetails"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JCircuitBreakerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigBuilder"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.exception.OrderServiceException"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.user.OidcUser"/>
    <fullyQualifiedTypeName name="org.springframework.ui.Model"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.annotation.AuthenticationPrincipal"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.microservice.ecommerce.model.AuthenticationResponse"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
</qualifiedTypeNameHistroy>
